dependencies {
    // BndPomRepository (3.5.0) cannot handle ranges without upper limit
    api 'org.jgrapes:org.jgrapes.core:[1.18.0,2)'
    api 'org.jgrapes:org.jgrapes.io:[2.2.0,3)'
    api 'org.jgrapes:org.jgrapes.http:[3.0.3,4)'
    api 'org.jgrapes:org.jgrapes.util:[1.22.0,2)'
    api 'org.jdrupes.json:json:[2.3.1,2.4.0)'
    api 'org.freemarker:freemarker:[2.3.31,2.4)'
}

apply plugin: 'com.github.node-gradle.node'

task buildLib(type: NodeTask, dependsOn: ':npmInstall') {
    inputs.files(project.fileTree(dir: 'src', include: '**/*.ts').flatten())
    inputs.file project.file('tsconfig.json')
    inputs.file project.file('rollup.config.mjs')
    outputs.cacheIf { true }
    outputs.dir project.file('build/generated/resources')
    script = file("${rootProject.rootDir}/node_modules/rollup/dist/bin/rollup")
    args = ["-c"]
}

sourceSets {
    main {
        resources {
            srcDir project.file('build/generated/resources')
        }
    }
}

processResources.dependsOn 'buildLib'

eclipse {
    autoBuildTasks buildLib
}

ext.jsDocDestDir = "${rootProject.buildDir}/javadoc/org/jgrapes/webconsole/base/jsdoc"

task tsdoc(type: NodeTask, dependsOn: ':npmInstall') {
    inputs.dir project.file('src')
    inputs.file project.file('tsconfig.json')
    inputs.file project.file('typedoc.json')
    outputs.dir project.file(jsDocDestDir)
    script = file("${rootProject.rootDir}/node_modules/typedoc/bin/typedoc")
    args = []
}

configurations {
    markdownDoclet
}
 
dependencies {
    markdownDoclet "org.jdrupes.mdoclet:doclet:3.1.0"
}

configurations {
    javadocTaglets
}
 
dependencies {
    javadocTaglets "org.jdrupes.taglets:plantuml-taglet:2.0.1"
}

task javadocResources(type: Copy) {
    into file("${rootProject.buildDir}/javadoc")
    from (rootProject.rootDir) {
        include 'WebConsole-pic1.png'
    }
    from ("${rootProject.rootDir}/misc") {
        include '*.woff2'
    }
}

task java11doc(type: JavaExec) {
    // Does not work on JitPack, no /usr/bin/dot
    enabled = JavaVersion.current() == JavaVersion.VERSION_17 && !isJitPackBuild
    
    dependsOn javadocResources
    dependsOn classes
    dependsOn tsdoc
    inputs.file "${rootProject.rootDir}/overview.md"
    inputs.file "${rootProject.rootDir}/misc/stylesheet.css"

    jvmArgs = ['--add-exports=jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED',
        '--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED']
    classpath files(rootProject.subprojects
        .findAll {project -> project.pluginManager.hasPlugin('java-library')
            || project.pluginManager.hasPlugin('application') }
        .collect {project -> project.sourceSets.main.compileClasspath})
    var sourceDirs = rootProject.subprojects
        .findAll({project -> project.name.startsWith("org.jgrapes")})
        .collect{project -> project.sourceSets.main.allJava.getSrcDirs() }
        .flatten().findAll(dir -> dir.exists())
    sourceDirs.each { inputs.dir(it) }
            
    ext.destinationDir = file("${rootProject.buildDir}/javadoc")
    outputs.dir(destinationDir)
    
    main = 'jdk.javadoc.internal.tool.Main'
    args = ['-doctitle', "JGrapes Web Console ${project.version}",
        '-use',
        '-linksource',
        '-link', 'https://docs.oracle.com/en/java/javase/11/docs/api/',
        '-link', 'https://mnlipp.github.io/jgrapes/latest-release/javadoc/',
        '-link', 'https://freemarker.apache.org/docs/api/',
        '--add-exports', 'jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED',
        '--add-exports', 'jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
        '-docletpath', configurations.markdownDoclet.files.asType(List).join(":"),
        '-doclet', 'org.jdrupes.mdoclet.MDoclet',
        '-tagletpath', configurations.javadocTaglets.files.asType(List).join(":"),
        '-taglet', 'org.jdrupes.taglets.plantUml.PlantUml',
        '-taglet', 'org.jdrupes.taglets.plantUml.StartUml',
        '-taglet', 'org.jdrupes.taglets.plantUml.EndUml',
        '-overview', "${rootProject.rootDir}/overview.md",
        '-d', destinationDir,
        '-sourcepath', sourceDirs.join(':'),
        '-subpackages', 'org.jgrapes',
        '-bottom', file("${rootProject.rootDir}/misc/javadoc.bottom.txt").text,
        '--allow-script-in-comments',
        '-Xdoclint:-html',
        '--main-stylesheet', "${rootProject.rootDir}/misc/stylesheet.css",
        '-quiet'
        ]

    ignoreExitValue true
    
}

task buildDoc {
    group 'build'
    dependsOn 'tsdoc'
    dependsOn 'java11doc'
}

task javadocJar(type: Jar) {
    dependsOn buildDoc
    from java11doc.destinationDir
    classifier "javadoc"
}
