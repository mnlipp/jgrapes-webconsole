plugins {
    id 'biz.aQute.bnd.builder' version "7.0.0"
    id 'org.ajoberstar.git-publish' version '4.2.0'
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
    id "com.github.node-gradle.node" version "7.0.1"
    id 'eclipse'
    // Make available, don't apply
    id 'org.ajoberstar.grgit' version '5.2.0' apply false
    id 'pl.allegro.tech.build.axion-release' version '1.17.2' apply false
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

allprojects {
    group = 'org.jgrapes'
}

ext {
	isCiBuild = System.getenv().get("CI") == 'true'
    isJitPackBuild = System.getenv().get("JITPACK") == 'true'
}

// Prepare github authentication for plugins
if (System.properties['org.ajoberstar.grgit.auth.username'] == null) {
    System.setProperty('org.ajoberstar.grgit.auth.username',
        project.rootProject.properties['repo.access.token'] ?: "nouser")
}

// subprojects {
//     rootProject.evaluationDependsOn(project)
// }

gitPublish {
	repoUri = 'https://github.com/mnlipp/jgrapes.git'
	branch = 'gh-pages'
	contents {
		from("${buildDir}/javadoc") {
			into 'javadoc-webconsole'
		}
        from("${buildDir}/aashdoc") {
            into 'aashdoc'
        }
	}
	preserve { include '**/*' }
	commitMessage = "Updated."
}

// Delay reset (checkout)
tasks.gitPublishReset.mustRunAfter ":org.jgrapes.webconsole.base:buildDoc"
tasks.gitPublishReset.mustRunAfter ":aash-vue-components:buildDoc"

task stage {
    description = 'To be executed by CI, build and update JavaDoc.'
    group = 'build'

    // Build everything first
    subprojects.findAll { it.name != 'cnf' }.each { dependsOn("${it.name}:build") }
    dependsOn ":aash-vue-components:buildDoc"
    dependsOn ":org.jgrapes.webconsole.base:buildDoc"

    if (!isCiBuild || JavaVersion.current() == JavaVersion.VERSION_21) {
        // Publish JavaDoc
        dependsOn gitPublishPush
    }	
}

configure(stage) {
	description = 'To be executed by travis, build and update JavaDoc.'
	group = 'build'
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.properties['sonatypeTokenKey'] ?: "nouser"
            password = project.properties['sonatypeTokenSecret'] ?: "nopass"
        }
    }
}

eclipse {
    project {
        file {
            project.natures += 'org.eclipse.buildship.core.gradleprojectnature'
            project.buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
        }
    }
}

