plugins {
    id 'org.jgrapes.java-bundle-conventions'
    id 'com.github.node-gradle.node'
}

dependencies {
	api project(':org.jgrapes.webconsole.base')
    runtimeOnly project(':org.jgrapes.webconsole.provider.vue')
}

// Prevents deadlock.
generatePomFileForMavenPublication.mustRunAfter(':org.jgrapes.webconsole.provider.vue:generatePomFileForMavenPublication')

task prepareAashLib(type: Copy) {
    description '''
    Helper task that copies the the libraries from the npm_modules 
    directory into a package scoped subdirectory. The root is added 
    to eclipse as resource directory thus making the files available 
    as package scoped resources when running a process in eclipse.
    '''
    dependsOn ':aash-vue-components:buildLib'
    into('build/generated/resources/org/jgrapes/webconsole/provider/jgwcvuecomponents/aash-vue-components')
    from ("${rootProject.projectDir}/aash-vue-components/") {
        include 'lib/**/*'
        include 'src/**/*'
    }
}

sourceSets {
    main {
        resources {
            srcDir project.file('build/generated/resources')
        }
    }
}

task compileTs(type: NodeTask) {
    dependsOn ':npmInstall'
    dependsOn ':aash-vue-components:buildLib'
    dependsOn ':org.jgrapes.webconsole.base:buildLib'
    dependsOn ':org.jgrapes.webconsole.provider.vue:prepareNpmLibs'
    dependsOn prepareAashLib
    inputs.files project.fileTree(dir: 'src', include: '**/*.ts')
    inputs.file project.file('tsconfig.json')
    inputs.file project.file('rollup.config.mjs')
    outputs.dir project.file('build/generated/resources')
    script = file("${rootProject.rootDir}/node_modules/rollup/dist/bin/rollup")
    args = ["-c"]
}

processResources {
    dependsOn compileTs
}

eclipse {
    autoBuildTasks prepareAashLib
    autoBuildTasks compileTs
}

ext.jsDocDestDir = "${rootProject.buildDir}/javadoc/org/jgrapes/webconsole/provider/jgwcvuecomponents/jsdoc"

/**
 * Needs its own tsconfig.js (tsconfig-typedoc.js) else aash lib cannot be
 * fully resolved. 
 */
task buildDoc(type: NodeTask, dependsOn: ':npmInstall') {
    dependsOn compileTs
    inputs.dir project.file('src')
    inputs.file project.file('tsconfig.json')
    outputs.dir project.file(jsDocDestDir)
    script = file("${rootProject.rootDir}/node_modules/typedoc/bin/typedoc")
    args = []
}

javadoc {
    if (!isJitPackBuild) {
        // Does not work on jitpack
        finalizedBy buildDoc
    }
}
