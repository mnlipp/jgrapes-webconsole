// Additional jars for publishing

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

// MavenPublishing (new)

// Prepare gitlab authentication
if (project.properties['gitLabRepoAccess'] == null) {
    ext.gitLabRepoAccess = System.getenv("GL_REPO_ACCESS") ?: "NO_ACCESS"
}

publishing {
        
    repositories {
        maven {
            name "snapshot"
            url "https://oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                username project.properties['sonatypeUsername'] ?: "nouser"
                password project.properties['sonatypePassword'] ?: "nopass"
            }
        }
        maven {
            name "release"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username project.properties['sonatypeUsername'] ?: "nouser"
                password project.properties['sonatypePassword'] ?: "nopass"
            }
        }
        
        maven {
            name "GitLab"
            url "https://gitlab.com/api/v4/projects/24557189/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = gitLabRepoAccess
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

// Additional configuration of publishing
apply plugin: ConfigurePublishing

configurePublishing {
    withPomXml {
        asNode().with {
            appendNode('url', 'http://mnlipp.github.io/jgrapes/')
            appendNode('scm').with {
                appendNode('url', 'scm:git@github.com:mnlipp/jgrapes-webconsole.git')
                appendNode('connection', 'scm:git@github.com:mnlipp/jgrapes-webconsole.git')
                appendNode('developerConnection', 'git@github.com:mnlipp/jgrapes-webconsole.git')
            }
            appendNode('licenses').with {
                appendNode('license').with {
                    appendNode('name', 'AGPL 3.0')
                    appendNode('url', 'https://www.gnu.org/licenses/agpl-3.0.en.html')
                    appendNode('distribution', 'repo')
                }
            }
            appendNode('developers').with {
                appendNode('developer').with {
                    appendNode('id', 'mnlipp')
                    appendNode('name', 'Michael N. Lipp')
                }
            }
        }
    }
}

processResources {
    dependsOn generatePomFileForMavenPublication
}

jar {
    into("META-INF/maven/$project.group/$project.name") {
        from generatePomFileForMavenPublication
        rename ".*", "pom.xml"
    }
}

task releaseTag {
    doLast {
        String name = project.name.startsWith(project.group + ".") ?
            project.name.substring(project.group.length() + 1) : project.name
        name = name.replace('.', '-')
        String tag = name + "-" + project.version
        grgit.tag.add(name: tag, message: "Released.")
        grgit.push(refsOrSpecs: [tag])
    }
}

task needsToBeSnapshot {
    doLast {
        if (project.isSnapshot) {
            return
        }
        String name = project.name.startsWith(project.group + ".") ?
            project.name.substring(project.group.length() + 1) : project.name
        name = name.replace('.', '-')
        String tag = name + "-" + project.version
        def tagForCurrent = grgit.tag.list().any { it.name == tag }
        if (tagForCurrent) {
            def diffs = "git diff --name-only HEAD ${tag} ${project.name}"
                .execute().text.split()
            if (diffs.size() > 0) {
                println "Project ${project.name} was modified since release."
            }
        } else {
            println "Project ${project.name} has no tag for current."
        }
    }
}

build.mustRunAfter "releaseTag"

task stageOnOssrh {
    group = "publishing"
    
    dependsOn "releaseTag"
    dependsOn "publishMavenPublicationToReleaseRepository"
}

task publishSnapshots {
    afterEvaluate {
        if (isSnapshot) {
            dependsOn 'publishMavenPublicationToSnapshotRepository'
        }
    }
}

afterEvaluate {
    if(!project.name.startsWith("org.jgrapes")) {
        tasks.matching { it.group == "publishing" }.all {
            enabled = false
        }
    }
}
